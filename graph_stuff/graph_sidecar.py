import csv
from io import StringIO

# Provided data
exp_data = """Value   Percentile   TotalCount 1/(1-Percentile)
0.567     0.000000            1         1.00
2.485     0.100000        58332         1.11
2.881     0.200000       116119         1.25
3.781     0.300000       174226         1.43
4.891     0.400000       232420         1.67
5.943     0.500000       290387         2.00
6.823     0.550000       319311         2.22
10.895     0.600000       348339         2.50
16.095     0.650000       377339         2.86
18.895     0.700000       406402         3.33
21.695     0.750000       435517         4.00
23.247     0.775000       449983         4.44
24.959     0.800000       464471         5.00
26.911     0.825000       479035         5.71
29.071     0.850000       493528         6.67
31.551     0.875000       508014         8.00
32.959     0.887500       515254         8.89
34.463     0.900000       522592        10.00
36.159     0.912500       529819        11.43
38.015     0.925000       537026        13.33
40.159     0.937500       544313        16.00
41.343     0.943750       547887        17.78
42.687     0.950000       551519        20.00
44.159     0.956250       555125        22.86
45.823     0.962500       558765        26.67
47.775     0.968750       562416        32.00
48.959     0.971875       564210        35.56
50.239     0.975000       566006        40.00
51.647     0.978125       567832        45.71
53.343     0.981250       569657        53.33
55.423     0.984375       571451        64.00
56.703     0.985938       572365        71.11
58.079     0.987500       573270        80.00
59.583     0.989062       574187        91.43
61.407     0.990625       575077       106.67
63.391     0.992188       575988       128.00
64.799     0.992969       576444       142.22
66.303     0.993750       576900       160.00
67.967     0.994531       577355       182.86
69.823     0.995313       577799       213.33
72.063     0.996094       578253       256.00
73.343     0.996484       578479       284.44
74.751     0.996875       578713       320.00
76.351     0.997266       578940       365.71
78.271     0.997656       579164       426.67
80.319     0.998047       579384       512.00
81.663     0.998242       579500       568.89
83.135     0.998437       579615       640.00
84.735     0.998633       579725       731.43
86.783     0.998828       579841       853.33
88.575     0.999023       579952      1024.00
89.791     0.999121       580012      1137.78
91.135     0.999219       580065      1280.00
92.671     0.999316       580124      1462.86
94.015     0.999414       580177      1706.67
95.935     0.999512       580234      2048.00
97.599     0.999561       580262      2275.56
99.519     0.999609       580291      2560.00
101.567     0.999658       580319      2925.71
103.615     0.999707       580350      3413.33
105.599     0.999756       580377      4096.00
106.879     0.999780       580390      4551.11
107.839     0.999805       580405      5120.00
108.607     0.999829       580418      5851.43
111.039     0.999854       580432      6826.67
113.151     0.999878       580447      8192.00
114.047     0.999890       580455      9102.22
114.687     0.999902       580461     10240.00
115.967     0.999915       580468     11702.86
117.567     0.999927       580476     13653.33
118.207     0.999939       580483     16384.00
119.423     0.999945       580486     18204.44
121.343     0.999951       580489     20480.00
124.543     0.999957       580493     23405.71
125.695     0.999963       580496     27306.67
127.935     0.999969       580500     32768.00
130.303     0.999973       580502     36408.89
130.559     0.999976       580504     40960.00
131.199     0.999979       580506     46811.43
132.095     0.999982       580507     54613.33
133.631     0.999985       580509     65536.00
133.759     0.999986       580510     72817.78
133.759     0.999988       580510     81920.00
134.271     0.999989       580511     93622.86
134.655     0.999991       580512    109226.67
134.783     0.999992       580513    131072.00
137.855     0.999993       580514    145635.56
137.855     0.999994       580514    163840.00
137.855     0.999995       580514    187245.71
146.431     0.999995       580515    218453.33
146.431     0.999996       580515    262144.00
147.199     0.999997       580516    291271.11
147.199     0.999997       580516    327680.00
147.199     0.999997       580516    374491.43
147.199     0.999998       580516    436906.67
147.199     0.999998       580516    524288.00
154.879     0.999998       580517    582542.22
154.879     1.000000       580517          inf"""

norm_data="""
"""

# Read data into a CSV-like structure
data_io = StringIO(exp_data)
csv_reader = csv.reader(data_io, delimiter=' ', skipinitialspace=True)

# Write data to CSV file
csv_file_path = 'sidecar_percentile_data.csv'
with open(csv_file_path, mode='w', newline='') as csv_file:
    csv_writer = csv.writer(csv_file)
    header = next(csv_reader)  # Read and ignore the header
    csv_writer.writerow(header)  # Write header to the new CSV file
    csv_writer.writerows(csv_reader)  # Write the rest of the data

print(f'Data has been written to {csv_file_path}')

import pandas as pd
import plotnine as pn

# Load data from the CSV file
df = pd.read_csv(csv_file_path)

# Create a ggplot
plot = (
    pn.ggplot(df, pn.aes(y='Percentile', x='Value'))
    + pn.geom_line(color="red")
    + pn.geom_vline(xintercept=df[df['Percentile'] == 0.990625]['Value'].values[0], linetype='dashed', color='grey', size=1)
    + pn.geom_hline(yintercept=0.990625, linetype='dashed', color='grey', size=1)
    + pn.ggtitle('End-to-end Latency Distribution for\n HotelReservation Workload (With Sidecar)')
    + pn.theme(plot_title = pn.element_text(hjust = 0.5))
    + pn.xlab('Latency (Milliseconds)')
    + pn.ylab('Percentile')
    + pn.lims(y=(0.5, 1))  # Set y-axis limits from 0.5 to 1
    + pn.geom_text(pn.aes(x=df[df['Percentile'] == 0.990625]['Value'].values[0] + 0.2, y=0.93, label='"99th Percentile: 60ms"'), color='red', va='bottom', ha='left')
)

# Save the plot as a PNG file
plot_file_path = 'sidecar_percentile_plot.png'
plot.save(plot_file_path, dpi=500)

print(f'Plot saved as {plot_file_path}')
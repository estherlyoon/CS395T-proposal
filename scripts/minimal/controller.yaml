apiVersion: v1
kind: ServiceAccount
metadata:
  namespace: default
  name: controller
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: discoverer
rules:
- apiGroups: [""]
  resources:
  - nodes
  - services
  - endpoints
  - pods
  verbs: ["get", "list", "watch"]
- apiGroups:
  - extensions
  resources:
  - ingresses
  verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: controller-discoverer
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: discoverer
subjects:
- kind: ServiceAccount
  name: controller
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: deployments-scale
rules:
  - apiGroups: ["apps"]
    resources:
      - deployments/scale
    resourceNames: ["nginx"]
    verbs:
      - update
      - patch
      - read
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: controller-deployments-scale
subjects:
- kind: ServiceAccount
  name: controller
  namespace: default
roleRef:
  kind: ClusterRole
  name: deployments-scale
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: controller
  namespace: default
  labels:
    app: controller
spec:
  replicas: 1
  selector:
    matchLabels:
      app: controller
  template:
    metadata:
      labels:
        app: controller
    spec:
      serviceAccountName: controller
      containers:
      - name: controller
        image: ${DOCKER_USER}/controller
        ports:
        - containerPort: 80
      - name: prometheus
        image: ${DOCKER_USER}/controller-prometheus
        ports:
        - containerPort: 9090
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus
  namespace: default
spec:
  selector:
    app: controller
  ports:
  - port: 9090